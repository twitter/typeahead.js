{"ts":1362740054841,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * typeahead.js\n * https://github.com/twitter/typeahead\n * Copyright 2013 Twitter, Inc. and other contributors; Licensed MIT\n */\n\nvar Transport = (function() {\n\n  function Transport(o) {\n    var rateLimitFn;\n\n    utils.bindAll(this);\n\n    o = o || {};\n\n    rateLimitFn = (/^throttle$/i).test(o.rateLimitFn) ?\n      utils.throttle : utils.debounce;\n\n    this.wait = o.wait || 300;\n    this.wildcard = o.wildcard || '%QUERY';\n    this.maxConcurrentRequests = o.maxConcurrentRequests || 6;\n\n    this.concurrentRequests = 0;\n    this.onDeckRequestArgs = null;\n\n    this.cache = new RequestCache();\n\n    this.get = rateLimitFn(this.get, this.wait);\n  }\n\n  utils.mixin(Transport.prototype, {\n\n    // private methods\n    // ---------------\n\n    _incrementConcurrentRequests: function() {\n      this.concurrentRequests++;\n    },\n\n    _decrementConcurrentRequests: function() {\n      this.concurrentRequests--;\n    },\n\n    _belowConcurrentRequestsThreshold: function() {\n      return this.concurrentRequests < this.maxConcurrentRequests;\n    },\n\n    // public methods\n    // --------------\n\n    get: function(url, query, cb) {\n      var that = this, resp;\n\n      url = url.replace(this.wildcard, encodeURIComponent(query || ''));\n\n      if (resp = this.cache.get(url)) {\n        cb && cb(resp);\n      }\n\n      else if (this._belowConcurrentRequestsThreshold()) {\n        $.ajax({\n          url: url,\n          type: 'GET',\n          dataType: 'json',\n          beforeSend: function() {\n            that._incrementConcurrentRequests();\n          },\n          success: function(resp) {\n            cb && cb(resp);\n            that.cache.set(url, resp);\n          },\n          complete: function() {\n            that._decrementConcurrentRequests();\n\n            if (that.onDeckRequestArgs) {\n              that.get.apply(that, that.onDeckRequestArgs);\n              that.onDeckRequestArgs = null;\n            }\n          }\n        });\n      }\n\n      else {\n        this.onDeckRequestArgs = [].slice.call(arguments, 0);\n      }\n    }\n  });\n\n  return Transport;\n})();\n"]],"start1":0,"start2":0,"length1":0,"length2":2057}]],"length":2057}
