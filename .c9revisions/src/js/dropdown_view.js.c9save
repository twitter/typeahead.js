{"ts":1362740111921,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * typeahead.js\n * https://github.com/twitter/typeahead\n * Copyright 2013 Twitter, Inc. and other contributors; Licensed MIT\n */\n\nvar DropdownView = (function() {\n\n  // constructor\n  // -----------\n\n  function DropdownView(o) {\n    utils.bindAll(this);\n\n    this.isMouseOverDropdown;\n\n    this.$menu = $(o.menu)\n    .on('mouseenter.tt', this._handleMouseenter)\n    .on('mouseleave.tt', this._handleMouseleave)\n    .on('click.tt', '.tt-suggestion', this._handleSelection)\n    .on('mouseover.tt', '.tt-suggestion', this._handleMouseover);\n  }\n\n  utils.mixin(DropdownView.prototype, EventTarget, {\n    // private methods\n    // ---------------\n\n    _handleMouseenter: function() {\n      this.isMouseOverDropdown = true;\n    },\n\n    _handleMouseleave: function() {\n      this.isMouseOverDropdown = false;\n    },\n\n    _handleMouseover: function($e) {\n      this._getSuggestions().removeClass('tt-is-under-cursor');\n      $($e.currentTarget).addClass('tt-is-under-cursor');\n    },\n\n    _handleSelection: function($e) {\n      this.trigger('select', formatDataForSuggestion($($e.currentTarget)));\n    },\n\n    _moveCursor: function(increment) {\n      var $suggestions, $cur, nextIndex, $underCursor;\n\n      // don't bother moving the cursor if the menu is hidden\n      if (!this.$menu.hasClass('tt-is-open')) {\n        return;\n      }\n\n      $suggestions = this._getSuggestions();\n      $cur = $suggestions.filter('.tt-is-under-cursor');\n\n      $cur.removeClass('tt-is-under-cursor');\n\n      // shifting before and after modulo to deal with -1 index of search input\n      nextIndex = $suggestions.index($cur) + increment;\n      nextIndex = (nextIndex + 1) % ($suggestions.length + 1) - 1;\n\n      if (nextIndex === -1) {\n        this.trigger('cursorOff');\n\n        return;\n      }\n\n      else if (nextIndex < -1) {\n        // circle to last suggestion\n        nextIndex = $suggestions.length - 1;\n      }\n\n      $underCursor = $suggestions.eq(nextIndex).addClass('tt-is-under-cursor');\n      this.trigger('cursorOn', { value: $underCursor.data('value') });\n    },\n\n    _getSuggestions: function() {\n      return this.$menu.find('.tt-suggestions > .tt-suggestion');\n    },\n\n    // public methods\n    // --------------\n\n    destroy: function() {\n      this.$menu.off('.tt');\n\n      this.$menu = null;\n    },\n\n    hideUnlessMouseIsOverDropdown: function() {\n      // this helps detect the scenario a blur event has triggered\n      // this function. we don't want to hide the menu in that case\n      // because it'll prevent the probable associated click event\n      // from being fired\n      if (!this.isMouseOverDropdown) {\n        this.hide();\n      }\n    },\n\n    hide: function() {\n      if (this.$menu.hasClass('tt-is-open')) {\n        this.$menu\n        .removeClass('tt-is-open')\n        .find('.tt-suggestions > .tt-suggestion')\n        .removeClass('tt-is-under-cursor');\n\n        this.trigger('hide');\n      }\n    },\n\n    show: function() {\n      if (!this.$menu.hasClass('tt-is-open')) {\n        this.$menu.addClass('tt-is-open');\n\n        this.trigger('show');\n      }\n    },\n\n    isOpen: function() {\n      return this.$menu.hasClass('tt-is-open');\n    },\n\n    moveCursorUp: function() {\n      this._moveCursor(-1);\n    },\n\n    moveCursorDown: function() {\n      this._moveCursor(+1);\n    },\n\n    getSuggestionUnderCursor: function() {\n      var $suggestion = this._getSuggestions()\n          .filter('.tt-is-under-cursor')\n          .first();\n\n      return $suggestion.length > 0 ?\n        formatDataForSuggestion($suggestion) : null;\n    },\n\n    getFirstSuggestion: function() {\n      var $suggestion = this._getSuggestions().first();\n\n      return $suggestion.length > 0 ?\n        formatDataForSuggestion($suggestion) : null;\n    },\n\n    renderSuggestions: function(query, dataset, suggestions) {\n      var datasetClassName = 'tt-dataset-' + dataset.name,\n          $dataset = this.$menu.find('.' + datasetClassName),\n          elBuilder,\n          fragment,\n          el;\n\n      // first time rendering suggestions for this dataset\n      if ($dataset.length === 0) {\n        $dataset = $('<li><ol class=\"tt-suggestions\"></ol></li>')\n        .addClass(datasetClassName)\n        .appendTo(this.$menu);\n      }\n\n      elBuilder = document.createElement('div');\n      fragment = document.createDocumentFragment();\n\n      this.clearSuggestions(dataset.name);\n\n      if (suggestions.length > 0) {\n        this.$menu.removeClass('tt-is-empty');\n\n        utils.each(suggestions, function(i, suggestion) {\n          elBuilder.innerHTML = dataset.template.render(suggestion);\n\n          el = elBuilder.firstChild;\n          el.setAttribute('data-value', suggestion.value);\n\n          fragment.appendChild(el);\n        });\n      }\n\n      $dataset.find('> .tt-suggestions')\n      .data({ query: query, dataset: dataset.name })\n      .append(fragment);\n\n      this.trigger('suggestionsRender');\n    },\n\n    clearSuggestions: function(datasetName) {\n      var $suggestions = datasetName ?\n          this.$menu.find('.tt-dataset-' + datasetName + ' .tt-suggestions') :\n          this.$menu.find('.tt-suggestions');\n\n      $suggestions.empty();\n\n      // add empty class if the dropdown menu is empty\n      this._getSuggestions().length === 0 && this.$menu.addClass('tt-is-empty');\n    }\n  });\n\n  return DropdownView;\n\n  function formatDataForSuggestion($suggestion) {\n    var $suggestions = $suggestion.parents('.tt-suggestions').first();\n\n    return {\n      value: $suggestion.data('value'),\n      query: $suggestions.data('query'),\n      dataset: $suggestions.data('dataset')\n    };\n  }\n})();\n"]],"start1":0,"start2":0,"length1":0,"length2":5586}]],"length":5586}
{"contributors":[],"silentsave":false,"ts":1362740272724,"patch":[[{"diffs":[[0,".value);"],[1,"\n          el.setAttribute(\"data-set\", JSON.stringify(suggestions[i]));"],[0,"\n\n      "]],"start1":4660,"start2":4660,"length1":16,"length2":87}]],"length":5657,"saved":false}
{"ts":1362742554176,"patch":[[{"diffs":[[0,"s[i]));\n"],[1,"          //The original data is passed to the typeahead suggestions; this can be used when an element is selected"],[0,"\n       "]],"start1":4732,"start2":4732,"length1":16,"length2":130}]],"length":5771,"saved":false}
{"ts":1362742829656,"patch":[[{"diffs":[[0,"s.data('"],[-1,"data"],[0,"set')\n  "]],"start1":5736,"start2":5736,"length1":20,"length2":16}]],"length":5767,"saved":false}
{"ts":1362742845950,"patch":[[{"diffs":[[0,"('set')\n"],[1,"      //Initial datum also being passed here\n"],[0,"    };\n "]],"start1":5742,"start2":5742,"length1":16,"length2":61}]],"length":5812,"saved":false}
